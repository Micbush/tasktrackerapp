{"version":3,"sources":["components/Button.js","components/Header.js","components/Footer.js","components/Task.js","components/Tasks.js","components/AddTask.js","components/About.js","App.js","reportWebVitals.js","index.js"],"names":["Button","color","text","onClick","style","backgroundColor","className","defaultProps","Header","title","onAdd","showAdd","Footer","location","useLocation","pathname","to","Task","task","onDelete","onToggle","reminder","onDoubleClick","id","cursor","day","Tasks","tasks","map","AddTask","useState","setText","setDay","setReminder","onSubmit","e","preventDefault","alert","type","placeholder","value","onChange","target","checked","currentTarget","About","App","showAddTask","setShowAddTask","setTasks","useEffect","getTasks","a","fetchTasks","tasksFromServer","fetch","res","json","data","fetchTask","addTask","method","headers","body","JSON","stringify","deleteTask","filter","toggleReminder","taskToToggle","updTask","path","exact","render","props","length","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1e676361.chunk.js","sourcesContent":["import PropTypes from 'prop-types'\n\nconst Button = ({ color, text, onClick }) => {\n    return <button onClick={onClick} style={{ backgroundColor: color }} className= 'btn'>{text}</button>\n}\n\nButton.defaultProps = {\n    color: 'steelblue',\n}\n\nButton.propTypes = {\n    text: PropTypes.string,\n    color: PropTypes.string,\n    onClick: PropTypes.func,\n}\n\nexport default Button","import PropTypes from 'prop-types'\nimport Button from './Button'\nconst Header = ({title, onAdd, showAdd }) => {\n    return (\n        <header className= 'header'>\n            <h1>{title}</h1>\n            <Button color={showAdd ? 'red' : 'green'} text={showAdd ? 'Close' : 'Add'} onClick= {onAdd} />\n        </header>\n    )\n}\n\nHeader.defaultProps = {\n    title: 'Task Tracker',\n}\n\nHeader.propTypes = {\n    title: PropTypes.string.isRequired,\n}\n\n// CSS in JS\n// const headingStyle = {\n//     color: 'red', \n//     backgroundColor: 'black'\n// }\n\nexport default Header\n","import { useLocation } from 'react-router-dom'\nimport { Link } from 'react-router-dom'\nconst Footer = () => {\n    const location = useLocation()\n    return (\n        <footer>\n            <p>Copyright &copy; 2020</p>\n            {location.pathname === '/tasktrackerapp' && (< Link to='/about'>About</Link>)}\n        </footer>\n    )\n}\n\nexport default Footer\n","import { FaTimes } from 'react-icons/fa'\n\nconst Task = ({task, onDelete, onToggle}) => {\n    return (\n        <div className={`task ${task.reminder ? 'reminder' : ''}`} onDoubleClick= {() => onToggle(task.id)}>\n            <h3>\n                {task.text} <FaTimes style={{ color: 'red', cursor: 'pointer'}} onClick={() => onDelete(task.id)}/>\n            </h3>\n            <p>{task.day}</p>\n        </div>\n    )\n}\n\nexport default Task\n","import Task from './Task'\nconst Tasks = ({tasks, onDelete, onToggle }) => {\n\n    return (\n        <>\n          {tasks.map((task) => (\n            <Task key= {task.id} task={task} onDelete={onDelete} onToggle= {onToggle}/>\n            )) }  \n        </>\n    )\n}\n\nexport default Tasks\n","import { useState } from 'react'\nconst AddTask = ({ onAdd }) => {\n    const [text, setText ] = useState('')\n    const [day, setDay ] = useState('')\n    const [reminder, setReminder ] = useState(false)\n\n    const onSubmit = (e) =>  {\n        e.preventDefault()\n\n        if(!text) {\n            alert('Please add a task!')\n            return\n        }\n\n        onAdd({ text, day, reminder})\n\n        setText('')\n        setDay('')\n        setReminder(false)\n    }\n\n    return (\n        <form className= 'add-form' onSubmit={onSubmit}>\n        <div className= 'form-control'>\n            <label>Task</label>\n            <input type='text' placeholder='Add Task' value={text} onChange={(e) => setText(e.target.value)}></input>\n        </div> \n        \n        <div className= 'form-control'>\n            <label>Day & Time</label>\n            <input type='text' placeholder='Add Day and Time' value={day} onChange={(e) => setDay(e.target.value)}/>\n        </div>\n\n        <div className= 'form-control form-control-check'>\n            <label>Set Reminder</label>\n            <input type='checkbox' checked={reminder} value={reminder} onChange={(e) => setReminder(e.currentTarget.checked)}/>\n        </div>\n        \n        <input type='submit' value='Save Task' className='btn btn-block'/>\n        </form>\n    )\n}\n\nexport default AddTask\n","import { Link } from 'react-router-dom'\nconst About = () => {\n    return (\n        <div>\n            <h4>Version 0.0.1</h4>\n            < Link to='/tasktrackerapp'>Go Back</Link>\n        </div>\n    )\n}\n\nexport default About\n","import { useState, useEffect } from 'react'\nimport { BrowserRouter as Router, Route } from 'react-router-dom'\n// import { useLocation } from 'react-router-dom'\nimport Header from './components/Header'\nimport Footer from './components/Footer'\nimport Tasks from './components/Tasks'\nimport AddTask from './components/AddTask'\nimport About from './components/About'\n\nconst App = () => {\n  const [showAddTask, setShowAddTask] = useState(false)\n  const [tasks, setTasks] = useState([])\n\n  useEffect(() => {\n    const getTasks = async () => {\n      const tasksFromServer = await fetchTasks()\n      setTasks(tasksFromServer)\n    }\n\n    getTasks()\n  }, [])\n\n    // Fetch Tasks\n  const fetchTasks = async () => {\n    const res = await fetch('https://github.com/Micbush/tasktrackerapp/blob/master/db.json/tasks')\n    const data = await res.json()\n\n    return data\n  }\n\n  // Fetch Task\n  const fetchTask = async (id) => {\n    const res = await fetch(`https://github.com/Micbush/tasktrackerapp/blob/master/db.json/tasks/${id}`)\n    const data = await res.json()\n\n    return data\n  }\n\n  //  Add Task\n  const addTask = async (task) => {\n    const res = await fetch('https://github.com/Micbush/tasktrackerapp/blob/master/db.json/tasks', {\n      method: 'POST',\n      headers: {\n        'content-type': 'application/json',\n      },\n      body: JSON.stringify(task),\n    })\n\n    const data = await res.json()\n\n    setTasks([...tasks, data])\n    // const id = Math.floor(Math.random() * 10000) + 1\n    // const newTask = { id, ...task }\n    // setTasks([...tasks, newTask]) \n    }\n\n  //  Delete Task\n  const deleteTask = async (id) => {\n    await fetch(`https://github.com/Micbush/tasktrackerapp/blob/master/db.json/tasks/${id}`, {\n      method: 'DELETE',\n    })\n    setTasks(tasks.filter((task) => task.id !== id))\n  }\n\n  // Togggle reminder\n  const toggleReminder = async (id) => {\n    const taskToToggle = await fetchTask(id)\n    const updTask = { ...taskToToggle, reminder: !taskToToggle.reminder }\n\n    const res = await fetch(`https://github.com/Micbush/tasktrackerapp/blob/master/db.json/tasks/${id}`, {\n      method: 'PUT',\n      headers: {\n        'Content-type': 'application/json'\n      },\n      body:JSON.stringify(updTask)\n    })\n\n    const data = await res.json()\n\n    setTasks(tasks.map((task) => task.id === id ? { ...task, reminder: data.reminder } : task))\n  }\n  return (\n    <Router>  \n      <div className=\"container\">\n           <Route path='/tasktrackerapp' exact render={(props) => (\n             <>\n              <Header onAdd={() => setShowAddTask(!showAddTask)} showAdd={showAddTask} />\n              {showAddTask && <AddTask onAdd={addTask}/>}\n              {tasks.length > 0 ? <Tasks tasks= {tasks} onDelete={deleteTask} onToggle={toggleReminder}/> : 'No Task To Show'}\n              </> \n      )}/>\n      <Route path='/about' component={About} />\n      <Footer />\n    </div>\n    </Router>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}